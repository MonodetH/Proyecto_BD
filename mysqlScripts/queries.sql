1.1 Listar historial de misiones de cada voluntario
SELECT​ USERS.ID_USER ​ AS​ ID_USER,
USERS.NOMBRE_USUARIO ​ AS​ NOMBRE_USUARIO,
MISSIONS.NOMBRE_MISION ​ AS​ NOMBRE_MISION
FROM​ REALIZA
JOIN​ USERS ​ ON​ REALIZA.ID_USER = USERS.ID_USER
JOIN​ TASKS ​ ON​ REALIZA.ID_TASK = TASKS.ID_TASK
JOIN​ MISSIONS ​ ON​ TASKS.ID_MISSION = MISSIONS.ID_MISSION
ORDER BY​ USERS.ID_USER, TASKS.ID_TASK;


1.2 Listar documentación de cada tarea
SELECT​ GENERA.ID_TASK ​ AS​ ID_TASKS,
DOCUMENTATIONS.ID_DOC ​ AS​ ID_DOC,
DOCUMENTATIONS.NOMBRE_DOC ​ AS​ NOMBRE_DOC,
DOCUMENTATIONS.URL_DOC ​ AS​ URL_DOC
FROM​ DOCUMENTATIONS
JOIN​ GENERA ​ ON​ DOCUMENTATIONS.ID_DOC = GENERA.ID_DOC
ORDER BY​ GENERA.ID_TASK, DOCUMENTATIONS.NOMBRE_DOC;


1.3 Historial de emergencias de una región
SELECT​ REGIONS.ID_REGION ​ AS​ ID_REGION,
REGIONS.NOMBRE_REGION ​ AS​ NOMBRE_REGION,
COMMUNES.ID_COMMUNE ​ AS​ ID_COMMUNE,
COMMUNES.NOMBRE_COMUNA ​ AS​ NOMBRE_COMUNA,
EMERGENCIES.NOMBRE ​ AS​ NOMBRE_EMERGENCIA,
EMERGENCIES.ESTADO_EMERGENCIA ​ AS​ ESTADO_EMERGENCIA,
EMERGENCIES.FECHA_EMERGENCIA ​ AS​ FECHA_EMERGENCIA
FROM​ REGIONS
JOIN​ COMMUNES ​ ON​ REGIONS.ID_REGION = COMMUNES.ID_REGION
JOIN​ EMERGENCIES ​ ON​ COMMUNES.ID_COMMUNE = EMERGENCIES.ID_COMMUNE
ORDER BY ​ REGIONS.ID_REGION,
COMMUNES.ID_COMMUNE,
EMERGENCIES.FECHA_EMERGENCIA ​ DESC​ ;


1.4 Listado de administradores
SELECT​ USERS.ID_USER ​ AS​ ID_USER,
USERS.NOMBRE_USUARIO ​ AS​ NOMBRE_USUARIO
FROM​ USERS
WHERE​ USERS.ADMIN = 1;


1.5 Listado de usuario según calificación promedio
SELECT​ USERS.ID_USER ​ AS​ ID_USER,
USERS.NOMBRE_USUARIO ​ AS​ NOMBRE_USUARIO,
PROM_TABLE.PROMEDIO ​ AS​ PROMEDIO,
PROM_TABLE.NRO_TASKS ​ AS​ NRO_TASKS
FROM​ USERS
JOIN​ (
SELECT​ REALIZA.ID_USER ​ AS​ ID_USER,
AVG(REALIZA.VALORACION) ​ AS​ PROMEDIO,
COUNT(*) ​ AS​ NRO_TASKS
FROM​ REALIZA
GROUP BY​ REALIZA.ID_USER
) PROM_TABLE ​ ON​ USERS.ID_USER = PROM_TABLE.ID_USER
ORDER BY​ PROM_TABLE.PROMEDIO ​ DESC​ ;


1.6 Listar voluntarios que cumplen con al menos un requisito de tarea para una tarea
específica de id = ID
SELECT​ USERS.ID_USER ​ AS​ ID_USER,
USERS.NOMBRE_USUARIO ​ AS​ NOMBRE_USUARIO,
COUNT(*) ​ AS​ HABILIDADES
FROM​ REQUIERE
JOIN​ ABILITIES ​ ON​ REQUIERE.ID_TASK = ​ ID ​ USING​ (ID_ABILITY)
JOIN​ TIENE ​ USING​ (ID_ABILIIY)
JOIN​ USERS ​ USING​ (ID_USER)
GROUP BY​ USERS.ID_USER


1.8 Listar misiones administradas por un usuario
SELECT​ USERS.ID_USER AS ID_USER,
USERS.NOMBRE_USUARIO AS NOMBRE_USUARIO,
MISSIONS.NOMBRE_MISION AS NOMBRE_MISION
FROM ​ REALIZA
JOIN ​ USERS ​ ON ​ REALIZA.ID_USER = USERS.ID_USER
JOIN ​ TASKS ​ ON ​ REALIZA.ID_TASK = TASKS.ID_TASK
JOIN ​ MISSIONS ​ ON​ TASKS.ID_MISSION = MISSIONS.ID_MISSION
ORDER BY​ USERS.ID_USER, TASKS.ID_TASK;


1.9 Listar encargados de emergencia por emergencia
SELECT​ MISSIONS.ID_EMERGENCY ​ AS​ id_emergency,
EMERGENCIES.NOMBRE ​ AS​ nombre,
MISSIONS.ID_USER ​ AS ​ id_user,
USERS.NOMBRE_USUARIO ​ AS ​ nombre_usuario,
MISSIONS.ID_MISSION ​ AS ​ id_mission,
MISSIONS.NOMBRE_MISION ​ AS ​ nombre_mision
FROM​ USERS
JOIN​ MISSIONS ​ ON ​ USERS.ID_USER = MISSIONS.ID_USER
JOIN​ EMERGENCIES ​ ON ​ MISSIONS.ID_EMERGENCY = EMERGENCIES.ID_EMERGENCY
ORDER BY​ MISSIONS.ID_EMERGENCY , MISSIONS.ID_USER , MISSIONS.ID_MISSION;


1.10 Listar voluntarios disponibles, junto a sus habilidades y el nivel de cada una.
Por medio de una consulta se crea una vista que permite listar todos los voluntarios que están
actualmente disponibles y sus habilidades con el nivel que cada una tiene, de manera que al
momento de necesitar voluntarios para una tarea de una misión, estos se pueden filtrar desde
esta tabla.
SELECT​ USERS.ID_USER, USERS.NOMBRE_USUARIO, TIENE.ID_A
BILITY,
TIENE.NIVEL_ABILITY
FROM​ USERS, TIENE
WHERE​ USERS.DISPONIBILIDAD = 1 ​ AND​ TIENE.ID_USER = USERS.ID_USER;